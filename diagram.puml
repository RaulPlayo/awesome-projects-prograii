@startuml "Trifuerza class diagram"

package Characters {

    class Player {
        + super()
        + keyHandler: KeyHandler
    }
    
    class NPC {
        + super()
    }

    class KeyHandler {
        + onKeyPressed(e:KeyListener) : void
    }

    interface Movement {
        + moveUp() : void
        + moveDown() : void
        + moveLeft() : void
        + moveRight() : void
    }

    abstract class Character {
        + transport: Transport
        + actualTerrain: Terrain
        + move() : void
        - ableToWalkBy(terrain:Terrain) : boolean
    }

    interface KeyEventListener

    Character <|-- Player
    Character <|-- NPC

    Player <-- KeyHandler : use
    
    class Character implements Movement
    class KeyHandler implements KeyEventListener
    
    
}

package Terrains {
    class Terrain {
        + position: Position
        + terrainType: TerrainTypes
        + Terrain(position:Position, terrainType:String)
    }

    enum TerrainTypes {
        Path
        Sand
        HeavyWater
        TallGrass
        Grass
        Water
        Wall
        Tree
    }

    class Position {
        + Xaxis: int
        + Yaxis: int
        + getPosition() : int[]
        + setPosition(Xaxis:int, Yaxis:int) : void
    }

    interface Visible {
        + show() : void
    }

    Terrain *-- TerrainTypes
    Terrain *-- Position

    Terrain <-Left- Character : use

    class Terrain implements Visible
    
}

package Transports {
    abstract class Transport {
        + speed: int
        + name: String
        + Transport(name:String,speed:int)
        + getSpeed() : int
        + getName() : String
    }
    class Boat {
        + super()
    }
    class Horse {
        + super()
    }
    class OnFoot {
        + super()
    }
    class Carpet {
        + super()
    }
    
    Transport <|-- Boat
    Transport <|-- Horse
    Transport <|-- OnFoot
    Transport <|-- Carpet

    Character <-- Transport : has
}

package Main{
    class World {
        + characters : Arraylist<Character>
        + levels : Arraylist<Maze>
        + player : Character
        + time : Time
        + World(player:Character, levels:Arraylist<Maze>, characters:Arraylist<Character>, time:Time)
        + updateWorld() : void
    }

    class Time {
        + hours: int
        + minutes: int
        + tick: int
        + Time(hours:int, minutes:int, tick:int)
        - setTime(hours:int, minutes:int) : void
        - getTime() : String
        - verifyTime(hours:int,minutes:int) : void
        - setTick(tick:int) : void
        + advanceTime() : void
        + isNight() : boolean
    }

    class Maze {
        + level: Arraylist<Arraylist<Terrain>>
        + Maze()
    }

    World *-- Character
    World *-- Maze 
    World *-- Time
    Maze *-- Terrain
}
@enduml